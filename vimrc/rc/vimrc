" OBARA Taihe's vimrc
" Copyright (C) 2017 OBARA Taihei
"=============================================================================

" Setting of the encoding to use for a save and reading.
" Make it normal in UTF-8 in Unix.
set encoding=utf-8
scriptencoding utf-8

if &compatible
  set nocompatible
endif

function! s:source_rc(path) abort
  let l:abspath = resolve(expand('~/.vim/rc/' . a:path))
  execute 'source' fnameescape(l:abspath)
endfunction

function! s:is_no_argument()
  let byte = line2byte(line('$') + 1)
  return (byte < 0) && (@% == '')
endfunction

function! s:on_VimEnter() abort
  if !s:is_no_argument()
    return
  endif
  VFiler -auto-cd
endfunction

function! s:load_local_plugins(path) abort
  let l:plugins_path = fnamemodify(a:path, ':p')
  if !isdirectory(l:plugins_path)
    return
  endif

  let l:paths = split(glob(l:plugins_path . '*'), '\n')
  if empty(l:paths)
    return
  endif

  for l:path in l:paths
    let l:name = fnamemodify(l:path, ':t')
    if l:name == 'nvim'
      if has('nvim')
        call s:load_local_plugins(l:path)
      endif
    elseif l:name == 'vim'
      if !has('nvim')
        call s:load_local_plugins(l:path)
      endif
    else
      if isdirectory(l:path)
        execute 'set runtimepath+=' . l:path
      endif
    endif
  endfor
endfunction

" Set augroup.
augroup MyAutoCmd
  autocmd!
  autocmd VimEnter * ++nested call s:on_VimEnter()
  autocmd BufNewFile,BufRead *.xaml setf xml
augroup END

if has('vim_starting')
  call s:source_rc('init.rc.vim')
endif

" Plugins
call s:source_rc('vimplug.rc.vim')
" Load local plugins
call s:load_local_plugins('~/.vim/lplugins')

call s:source_rc('plugins.rc.vim')

" Load each vimrcs
let s:vimrcs = [
      \ 'options.rc.vim',
      \ 'mappings.rc.vim',
      \ 'commands.rc.vim',
      \ ]
if has('nvim')
  call add(s:vimrcs, 'neovim.rc.vim')
endif

if has('gui_runing')
  call add(s:vimrcs, 'gui.rc.vim')
endif

if IsWindows()
  call add(s:vimrcs, 'windows.rc.vim')
else
  call add(s:vimrcs, 'unix.rc.vim')
endif

for rc in s:vimrcs
  call s:source_rc(rc)
endfor

" Required
" 重要:以下の設定を後半に記述する (特に dein の処理後)
"   前半だとsyntaxが効かない
"   autocmd 等での遅延設定だと lightline の NORMAL の色が無くなってしまう
filetype plugin indent on
syntax enable
filetype detect

" For colorscheme
if exists('+termguicolors')
  set termguicolors

  " Vim で NeoSolarized を使うと色がつかないため、コメントアウト
  "let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
  "let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
endif

" 共通として 'NeoSolarized' を使用する
set background=dark
let $NVIM_TUI_ENABLE_TRUE_COLOR = 1
let g:neosolarized_italic = 0

colorscheme NeoSolarized

set secure

" vim: foldmethod=marker
